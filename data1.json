{"reverse_image": "import requests, os, sys, time
import webbrowser
from colorama import Fore, Back, Style
from functools import lru_cache
import gc

gc.collect()
global fetchUrl
@lru_cache(maxsize = None)
def banner():
    BY = "\033[1;33m"
    BR = "\033[1;31m"
    BG = "\033[1;32m"
    BB = "\033[1;34m"
    _Off = "\033[0m" 
    return Fore.RED+Style.BRIGHT+"\n"+"\t"+r"""                                                                                        
                 ____   ____ __ __  ____ ____   __   ____
                 || \\ ||    || || ||    || \\ (( \ ||   
                 ||_// ||==  \\ // ||==  ||_//  \\  ||== 
                 {}|| \\ ||___  \V/  ||___ || \\ \_)) ||___
                 
                              version  1.1
                     __ ___  ___  ___    ___   ____        
                     || ||\\//|| // \\  // \\ ||             
               {}{}      || || \/ || ||=|| (( ___ ||==           
                     || ||    || || ||  \\_|| ||___          
            {}
          '''''''''''''''''''''''''''''''''''''''''''''''''''''
                {}Site: https://hackingvila.wordpress.com{}
                {}         @Auther = Aniket Dinda  {}
          '''''''''''''''''''''''''''''''''''''''''''''''''''''
    """.format(BY, _Off, BR, _Off, BG, _Off, BB, _Off)

def User_input():
    try:
        file_check()
    except IOError:
        print("\n")
        print(Fore.RED + Style.BRIGHT +"ERROR : File Does not Exist\n" + Style.RESET_ALL)
    except KeyboardInterrupt:
        os.system('cls' if os.name == 'nt' else 'clear')
        print(banner())
        print("\n\n")
        print(Fore.RED + Style.BRIGHT +"\t [ Keyboard Interrupt Detected ] \n" + Style.RESET_ALL)

def file_check():
    os.system('cls' if os.name == 'nt' else 'clear')
    print(banner())
    img = str(input(Fore.CYAN + Style.BRIGHT  + "\n\n\t[$] Type your file location / name --> " + Fore.YELLOW))
    new_string = remove(img)
    #path = os.path.abspath(new_string)
    path = str(new_string.strip())
    ext = os.path.splitext(path)[1].lower()
    file_ext_validation(path, ext)

def remove(img):
    characters_to_remove = "'" + '"' + "&"
    new_string = img.replace('"', "")
    for character in characters_to_remove:
        new_string = new_string.replace(character, "").strip()
    return new_string

@lru_cache(maxsize = None)
def file_ext_validation(path, ext):
    file_list = [".jpg", ".gif", ".png", ".bmp", ".tif" ,".webp", ".jpeg", ".ico", "svg", "ppm", "tiff"]
    if ext in file_list:
        print("\n" +Fore.GREEN + Style.BRIGHT +"!!! Successful !!! file extension matched".upper() + Style.RESET_ALL + "\n\n")
        print(Fore.CYAN + Style.BRIGHT + f"[+] File Extension -->>  {ext}")
        print(f"[+] File Path -->  {path}".strip() + Style.RESET_ALL)
        reverseimagesearch_main_process(path)
    else:
        print("\n\n" + Fore.RED + Style.BRIGHT + " Not supported file extension ".upper() + Fore.YELLOW + f"{ext}" + "\n\n")
        print(f"[*] File path -->> {Fore.CYAN}" + f"{path}" + Style.RESET_ALL)
        if not bool(ext):
            print(Fore.RED + Style.BRIGHT + "[!] File Extension -->>  " + "Error Extension DETECT !!!" + Fore.CYAN + f"{ext}" + Style.RESET_ALL)
        else:
            print(Fore.RED + Style.BRIGHT + "[!] File Extension -->>  " + Fore.CYAN + f"{ext}" + Style.RESET_ALL)
        _error_restart()

def _error_restart():
    print(Fore.RED + Style.BRIGHT + "[!] Supported file format -->  " + Style.RESET_ALL+ Fore.YELLOW +".jpg, .gif, .png, .bmp, .tif, .webp, .jpeg, .ico, .svg, .ppm, .tiff"+Style.RESET_ALL+"\n")
    error = input(Fore.RED + Style.BRIGHT +"\nPress ENTER for restart or type [q / Q] for exit  \n[$]-->  " + Style.RESET_ALL)
    if error in ["", " "]:
        User_input()
    else:
        sys.exit

@lru_cache(maxsize = None)
def reverseimagesearch_main_process(path):
    Main_link='https://www.google.com/searchbyimage/upload'
    image_data_encoder={'encoded_image': (path, open(path, 'rb')), 'image_content': ''}
    response = requests.post(Main_link, files=image_data_encoder, allow_redirects=False)
    fetchUrl = response.headers['Location']
    print("\n" +Fore.WHITE+Back.BLUE+Style.BRIGHT+fetchUrl+Style.RESET_ALL+"\n")
    open_browser(fetchUrl)


@lru_cache(maxsize = None)
def open_browser(fetchUrl):
    print(f'{Fore.LIGHTRED_EX} [#] parent process:', os.getppid())
    print(f'{Fore.LIGHTRED_EX} [-] process id:', os.getpid())
    openWeb = input("Open Search Result in web browser? (Y/N) : ")
    if openWeb in ["y", "Y", "1"]:
        os.system('cls' if os.name == 'nt' else 'clear')
        print(banner())
        print("\n\n" +Fore.WHITE+ "-"*42+ Style.RESET_ALL)
        print("\t" +Fore.WHITE+Back.GREEN+Style.BRIGHT+" [+]  Browser Opened  [+] "+Style.RESET_ALL)
        print(Fore.WHITE+ "-"*42+ Style.RESET_ALL)
        print("\n"+Fore.WHITE+Style.BRIGHT+Style.RESET_ALL+" [$] ==>  " +Fore.WHITE+Back.BLUE+Style.BRIGHT+fetchUrl+Style.RESET_ALL+"\n")
        webbrowser.open(fetchUrl)
        error = input(Fore.RED + Style.BRIGHT +"\nPress ENTER for restart or type [q / Q] for exit  \n[$]-->  " + Style.RESET_ALL)
        if error in ["", " "]:
            User_input()
        else:
            sys.exit
    elif openWeb in ["n", "N", "2"]:
        error = input(Fore.RED + Style.BRIGHT +"\nPress ENTER for restart or type [q / Q] for exit  \n[$]-->  " + Style.RESET_ALL)
        if error in ["", " "]:
            User_input()
        else:
            sys.exit
    else:
        sys.exit

def mAin1():
    os.system('cls' if os.name == 'nt' else 'clear')
    url = "https://hackingvila.wordpress.com"
    timeout = 5
    try:
        request = requests.get(url, timeout=timeout)
        gc.collect()
        print(banner())
        print("\n\n" +Fore.WHITE+ "-"*50+ Style.RESET_ALL)
        print("\t" +Fore.WHITE+Back.GREEN+Style.BRIGHT+" [+] Connected to Internet [+] "+Style.RESET_ALL)
        print(Fore.WHITE+ "-"*50+ Style.RESET_ALL)
        time.sleep(3)
        User_input()
    except (requests.ConnectionError, requests.Timeout) as exception:
        gc.collect()
        print(banner())
        print("\n\n\n" +Fore.WHITE+Back.RED +"-"*52+ Style.RESET_ALL)
        print("\t" +Fore.YELLOW+Back.RED+Style.BRIGHT+" [+] Disconnected from Internet [+] "+Style.RESET_ALL)
        print(Fore.WHITE+Back.RED +"-"*52+ Style.RESET_ALL)
        
if __name__ == "__main__":
    mAin1()"}